<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HubblePOS.Logging</name>
    </assembly>
    <members>
        <member name="M:HubblePOS.Logging.FormatHelper.FormatStackFrameItem(System.Diagnostics.StackFrame)">
            <exception cref="T:HubblePOS.Logging.FormatException">Error de formateo</exception>
        </member>
        <member name="M:HubblePOS.Logging.ValidationHelper.ValidateLoggerQualifiedOrSimpleName(System.String)">
            <exception cref="T:HubblePOS.Logging.ValidationException">Error de validación</exception>
        </member>
        <member name="M:HubblePOS.Logging.ValidationHelper.ValidateAppenderName(System.String)">
            <exception cref="T:HubblePOS.Logging.ValidationException">Error de validación</exception>
        </member>
        <member name="M:HubblePOS.Logging.ValidationHelper.ValidateConfiguration(HubblePOS.Logging.LogManagerConfiguration)">
            <exception cref="T:HubblePOS.Logging.ValidationException">Error de validación</exception>
        </member>
        <member name="M:HubblePOS.Logging.ValidationHelper.ValidateConfiguration(HubblePOS.Logging.LogManagerConfigurationLogger)">
            <exception cref="T:HubblePOS.Logging.ValidationException">Error de validación</exception>
        </member>
        <member name="M:HubblePOS.Logging.ValidationHelper.ValidateConfiguration(HubblePOS.Logging.LoggerConfiguration)">
            <exception cref="T:HubblePOS.Logging.ValidationException">Error de validación</exception>
        </member>
        <member name="M:HubblePOS.Logging.ValidationHelper.ValidateConfiguration(HubblePOS.Logging.AppenderConfigurationBase)">
            <exception cref="T:HubblePOS.Logging.ValidationException">Error de validación</exception>
        </member>
        <member name="M:HubblePOS.Logging.ValidationHelper.ValidateConfiguration(HubblePOS.Logging.AppenderConfigurationFile)">
            <exception cref="T:HubblePOS.Logging.ValidationException">Error de validación</exception>
        </member>
        <member name="M:HubblePOS.Logging.ValidationHelper.ValidateConfiguration(HubblePOS.Logging.AppenderConfigurationRollingFile)">
            <exception cref="T:HubblePOS.Logging.ValidationException">Error de validación</exception>
        </member>
        <member name="F:HubblePOS.Logging.AppenderBase._isProcessingQueueStarted">
            <summary>
            Valores:
                + No ha comenzado: 0 o negativos.
                + Sí ha comenzado: positivos 
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.AppenderBase.LoggingEventQueue">
            <summary>
            Cola para eventos de log a procesar en diferido. Permite retonar el control al inovcador del método DoAppend lo antes posible y 
            realizar las tareas de render y escritura (así como cualesquiera otras adicionales) en diferido
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.AppenderBase.ProcessingNewQueueItemsSyncEvent">
            <summary>
            Artefacto para sincronizar la necesidad de realizar más iteraciones en el bucle de procesado de eventos de log encolados.
            Cuando dicho bucle detecta que ya no hay más eventos, se detiene, a la espera de que entre algún nuevo evento
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.AppenderBase.StoppingProcessingQueueSyncEvent">
            <summary>
            Artefacto para sincronizar la parada del bucle de procesado de eventos de log encolados.
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.AppenderBase.MustAbortProcessingQueue">
            <summary>
            Indica si de debe detener definitivamente el bucle de procesado de eventos de log encolados
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.AppenderBase.FilterHead">
            <summary>
            Primer filtro. Nulo si no hay ninguno
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.AppenderBase.ExternalNeedToParalyzeActivitySyncEvent">
            <summary>
            Artefacto (opcional) para sincronizar la necesidad externa al appender de que este paralice su actividad hasta que deje de ser necesario.
            Típicamente esto ocurre cuando el Manager está realizando tareas de actualización masivas en múltiples loggers, appenders, etc.
            y se requiere que no trabajen hasta que la configuración global del sistema de log está actualizada y sea coherente entre sí.
            </summary>
        </member>
        <member name="M:HubblePOS.Logging.AppenderBase.DoPreRenderingAndWritingLoggintEventTasks(System.Collections.Generic.IList{HubblePOS.Logging.LoggingEvent})">
            <summary>
            Realiza tareas previas al rendering y escritura de los eventos de log
            </summary>
            <param name="loggingEventList">Lista de eventos de log para los que se realizan las tareas previas</param>
            <returns>True si hay que continuar procesando los eventos de log. False en caso contrario</returns>
        </member>
        <member name="M:HubblePOS.Logging.AppenderBase.DoRenderingAndWritingLoggintEventTasks(System.Collections.Generic.IList{HubblePOS.Logging.LoggingEvent})">
            <summary>
            Realiza el render y escritura de uno o varios eventos de log
            </summary>
            <param name="loggingEventList">Lista de eventos de log a renderizar y escribir</param>
            <returns>True si hay que continuar con las post-tareas. False en caso contrario</returns>
        </member>
        <member name="M:HubblePOS.Logging.AppenderBase.DoPostRenderingAndWritingLoggintEventTasks(System.Collections.Generic.IList{HubblePOS.Logging.LoggingEvent})">
            <summary>
            Realiza tareas posteriores al rendering y escritura de los eventos de log
            </summary>
            <param name="loggingEventList">Lista de eventos de log para los que se realizan las tareas previas</param>
        </member>
        <member name="M:HubblePOS.Logging.AppenderBase.#ctor(System.String,System.Threading.ManualResetEvent)">
            <summary>
            Constructor
            </summary>
            <param name="name">Nombre del appender. No puede ser nulo, ni vacío ni blancos (se autogenerará uno en caso contrario)</param>
            <param name="externalNeedToParalyzeActivitySyncEvent">Gestor del evento de sincronización para la necesidad externa de paralizar la actividad del appender. Nulo si no hay ninguno</param>
        </member>
        <member name="M:HubblePOS.Logging.AppenderBase.Configure(HubblePOS.Logging.AppenderConfigurationBase)">
            <exception cref="T:HubblePOS.Logging.ValidationException">Entrada no válida</exception>
        </member>
        <member name="P:HubblePOS.Logging.AppenderBase.Name">
            <summary>
            Nombre del appender
            </summary>
        </member>
        <member name="M:HubblePOS.Logging.AppenderBase.DoAppend(HubblePOS.Logging.LoggingEvent)">
            <summary>
            Añade el evento al log.
            Este método retornará lo antes posible, almacenándolo en una estructura interna
            para que pueda ser persistido en el log correspondiente en segundo plano.
            </summary>
            <param name="loggingEvent">Evento de log a añadir al log</param>
        </member>
        <member name="M:HubblePOS.Logging.AppenderBase.Close">
            <summary>
            Libera recursos reservados por el appender como manejadores de fichero.
            Dejará de admitir peticiones de adición de eventos de log, y previamente a liberar los resursops
            intentará gestionar cualquier evento pendiente que pueda tener en sus estructuras internas.
            Si en un tiempo no lo consigue, desistirá y procedeá a liberar recursos.
            Se considera un error de programación llamar a un appender ya cerrado.
            </summary>
            <returns>
            Tarea
            </returns>
        </member>
        <member name="M:HubblePOS.Logging.AppenderBase.CheckLoggingEventPassFilterChain(HubblePOS.Logging.LoggingEvent)">
            <summary>
            Comprueva que el evento de log pasa la cadena de filtros.
            Pasará si: no hay filtros o habiéndolos dicha cadena retorna aceptación o neutralidad
            </summary>
            <exception cref="T:HubblePOS.Logging.ValidationException">Entrada no válida</exception>
        </member>
        <member name="M:HubblePOS.Logging.AppenderBase.StopProcessingQueue">
            <summary>
            Inicia la parada del bucle de procesado de eventos.
            Se esperará a que el bucle acabe de procesar los eventos de log encolados.
            Pasado un tiempo, aunque queden eventos, el bucle se detencrá
            </summary>
        </member>
        <member name="M:HubblePOS.Logging.AppenderBase.ProcessEnqeuedLoggingEvent(System.Collections.Generic.IList{HubblePOS.Logging.LoggingEvent})">
            <summary>
            Procesa (posibles pre-tareas, renderiza, escribe, posibles post-tareas) el evento de log indicado que era el siguiente en la cola
            </summary>
            <param name="loggingEventList"></param>
        </member>
        <member name="P:HubblePOS.Logging.AppenderFile.FullFilePath">
            <summary>
            Ruta completa del archivo, incluida la unidad, arbol de directorios y extensión.
            No puede ser nulo, y debe ser una ruta bien formada.
            Ej: C:\Logs\log.txt
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.AppenderFile.Layout">
            <summary>
            Layout. Nulo si no hay ninguno
            </summary>
        </member>
        <member name="M:HubblePOS.Logging.AppenderFile.#ctor(System.String,System.Threading.ManualResetEvent)">
            <summary>
            Constructor
            </summary>
            <param name="name">Nombre del appender. No puede ser nulo, ni vacío ni blancos (se autogenerará uno en caso contrario)</param>
            <param name="externalNeedToParalyzeActivitySyncEvent">Gestor del evento de sincronización para la necesidad externa de paralizar la actividad del appender. Nulo si no hay ninguno</param>
        </member>
        <member name="M:HubblePOS.Logging.AppenderFile.Configure(HubblePOS.Logging.AppenderConfigurationBase)">
            <exception cref="T:HubblePOS.Logging.ValidationException">Entrada no válida</exception>
        </member>
        <member name="M:HubblePOS.Logging.AppenderFile.DoRenderingAndWritingLoggintEventTasks(System.Collections.Generic.IList{HubblePOS.Logging.LoggingEvent})">
            <summary>
            Realiza el render y escritura de uno o varios eventos de log
            </summary>
            <param name="loggingEventList">Lista de eventos de log a renderizar y escribir</param>
            <returns>True si hay que continuar con las post-tareas. False en caso contrario</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "P:HubblePOS.Logging.AppenderRollingFile.MaximumFileSizeInBytes" -->
        <member name="P:HubblePOS.Logging.AppenderRollingFile.MaximumHoursOld">
            <summary>
            Máxima antiguedad del fichero de log principal, en horas (desde su creación).
            El valor debe ser mayor que 0.
            Null significa sin límite en este criterio.
            
            No null es imcompatible con los siguientes valores de configuración:
            + MaximumAmountRollBackups con valor 0.
            + RollBackupsDirectoryFullPath nulo (o no válido).
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.AppenderRollingFile.MaximumAmountRollBackups">
            <summary>
            Número máximo de archivos de backup circulantes.
            Posibles valores:
                + >0: número de archivos de backup; tras superar dicho número se borrará el más antiguo
                + 0: no se harán backups; en tal caso si hay un criterio de tamaño máximo el contenido al principio del fichero será purgado para satisfacer dicho criterio
                + Null: sin límite
                
            El valor 0 es incompatible con los siguientes valores de configuración:
                + MaximumHoursOld distinto de null (y mayor que 0)
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.AppenderRollingFile.RollBackupsDirectoryFullPath">
            <summary>
            Ruta completa del arbol de directorios donde ubicar los backups circulantes.
            
            Null es incompatible con los siguientes valores de configuración:
                + MaximumHoursOld distinto de null (y mayor que 0).
                + MaximumAmountRollBackups null o mayor que 0 y MaximumFileSizeInBytes distinto de null (y mayor que 0).
                
            Ejemplo: 
            C:\HubblePOS\Backups\Logs\ (con o sin barra final).
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.AppenderRollingFile.RollBackupFileExtension">
            <summary>
            Extensión del fichero de backup (especificado sin punto al principio; ej:txt). 
            No puede superar los 20 caracteres.
            Posibles valores:
                + Null: tendrá la extensión del fichero original.
                + "" (cadena vacía): sin extensión
                + xxx (otra): dicha extensión
                
            En caso de compresión de los archivos, el archivo contenedor comprimido tendrá la extensión correspondiente
            a la compresión utilizada; sin embargo el archivo contenido en dicho contenedor tendrá la extensión indicada.
            
            Ejemplo:
            backup comprimido: xxxxxxx.zip
            fichero contenido en el backup comprimido: xxxxxxxx.backup
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.AppenderRollingFile.MustCompressBackup">
            <summary>
            Indica si los archivos de back deben comprimirse
            </summary>
        </member>
        <member name="M:HubblePOS.Logging.AppenderRollingFile.#ctor(System.String,System.Threading.ManualResetEvent)">
            <summary>
            Constructor
            </summary>
            <param name="name">Nombre del appender. No puede ser nulo, ni vacío ni blancos (se autogenerará uno en caso contrario)</param>
            <param name="externalNeedToParalyzeActivitySyncEvent">Gestor del evento de sincronización para la necesidad externa de paralizar la actividad del appender. Nulo si no hay ninguno</param>
        </member>
        <member name="M:HubblePOS.Logging.AppenderRollingFile.Configure(HubblePOS.Logging.AppenderConfigurationBase)">
            <exception cref="T:HubblePOS.Logging.ValidationException">Entrada no válida</exception>
        </member>
        <member name="M:HubblePOS.Logging.AppenderRollingFile.DoPreRenderingAndWritingLoggintEventTasks(System.Collections.Generic.IList{HubblePOS.Logging.LoggingEvent})">
            <summary>
            Realiza tareas previas al rendering y escritura de los eventos de log
            </summary>
            <param name="loggingEventList">Lista de eventos de log para los que se realizan las tareas previas</param>
            <returns>True si hay que continuar procesando los eventos de log. False en caso contrario</returns>
        </member>
        <member name="M:HubblePOS.Logging.AppenderRollingFile.DoPostRenderingAndWritingLoggintEventTasks(System.Collections.Generic.IList{HubblePOS.Logging.LoggingEvent})">
            <summary>
            Realiza tareas posteriores al rendering y escritura de los eventos de log
            </summary>
            <param name="loggingEventList">Lista de eventos de log para los que se realizan las tareas previas</param>
        </member>
        <member name="M:HubblePOS.Logging.AppenderRollingFile.CheckIfMustBackupFileAccordingCriteria">
            <summary>
            Comprueba si es necesario realiizar el backup del archivo de log, conformo a sus características y criterios configurados
            </summary>
            <returns>True si es necesario hacer el backup</returns>
        </member>
        <member name="M:HubblePOS.Logging.AppenderRollingFile.CheckIfMustPurgeFileContentsAccordingCriteria">
            <summary>
            Comprueba si es necesaio purgar el contenido más antiguo del fichero, de acuerdo a los criterios configurados.
            Esto ocurre cuando hay un límite de tamaño para el log pero el número de ficheros de backup permitidos es 0
            </summary>
            <returns>True si es necesario purgar parte del contenido</returns>
        </member>
        <member name="M:HubblePOS.Logging.AppenderRollingFile.BackupLogFile">
            <summary>
            Procesa el backup del archivo de log, realizando compresión del archivo resultado y rolling de archivos viejos sobrantes, si corresponde
            </summary>
            <returns>True si el archivo se ha movido a la ruta de backups (aunque la compresión y borrado de archivos antiguos falle)</returns>
        </member>
        <member name="M:HubblePOS.Logging.AppenderRollingFile.CompressFile(System.String,System.String,System.String)">
            <summary>
            Comprime un fichero en un .zip.
            Si no existe el arbol de directorios de la ruta para el archivo resultante de la compresión, se crea.
            </summary>
            <param name="fullFileNameOfResultingCompressedFile">Archivo resultado, comprimido como zip</param>
            <param name="fullFileNameToCompress">Archivo a comprimir</param>
            <param name="entryNameInCompressedFile">Nombre de la entrada del archivo original en el comprimido (no puede llevar ruta; sólo nombre fichero y a lo sumo extensión)</param>
            <returns>True si se ha purgado el contenido</returns>
        </member>
        <member name="M:HubblePOS.Logging.FilterBase.#ctor(HubblePOS.Logging.IFilter)">
            <summary>
            Constructor
            </summary>
            <param name="nextFilter">siguiente filtro. Puede ser nulo si no hay ninguno</param>
        </member>
        <member name="T:HubblePOS.Logging.FilterDenyAll">
            <summary>
            Representa un filtro cuya decisión siempre es denegar
            </summary>
        </member>
        <member name="M:HubblePOS.Logging.FilterDenyAll.#ctor(HubblePOS.Logging.IFilter)">
            <summary>
            Constructor
            </summary>
            <param name="nextFilter">Siguiente filtro. Puede ser nulo si no hay ninguno</param>
        </member>
        <member name="T:HubblePOS.Logging.FilterException">
            <summary>
            Representa un filtro donde se busca que la excepción con la que se inicializó el evento de log coincida con todos los criterios especificados
            </summary>
        </member>
        <member name="M:HubblePOS.Logging.FilterException.#ctor(HubblePOS.Logging.IFilter,System.Type,System.String,System.Object,System.Object,System.Boolean,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="nextFilter">Siguiente filtro. Puede ser nulo si no hay ninguno</param>
            <param name="typeToMatch">Tipo de la excepción. Nulo significará que no constará como criterio</param>
            <param name="messageSubstringToMatch">Subcadena a buscar en el mensaje de la excepción. Nulo significará que no constará como criterio</param>
            <param name="dataKeyObjectToMatch">Objeto como clave en el diccionario Data de la excepción. Nulo significará que no constará como criterio</param>
            <param name="dataValueObjectToMatch">Objeto como valor en el diccionario Data de la excepción. Nulo significará que no constará como criterio</param>
            <param name="isInnerExceptionsSearchActivated">Indica si la búsqueda debe profuncizar en las posibles excepciones anidadas</param>
            <param name="acceptOnMatch">Indica si hay que decidir aceptar o denegar en caso de coincidir con la condición del filtro</param>
        </member>
        <member name="M:HubblePOS.Logging.FilterException.Decide(HubblePOS.Logging.LoggingEvent)">
            <summary>
            Decides the specified logging event.
            </summary>
            <param name="loggingEvent">The logging event.</param>
            <returns></returns>
        </member>
        <member name="M:HubblePOS.Logging.FilterException.IsValueContainedInDictionary(System.Collections.IDictionary,System.Object)">
            <exception cref="T:HubblePOS.Logging.GenericErrorException">Error genérico</exception>
        </member>
        <member name="M:HubblePOS.Logging.FilterException.IsKeyValuePairContainedInDictionary(System.Collections.IDictionary,System.Object,System.Object)">
            <exception cref="T:HubblePOS.Logging.GenericErrorException">Error genérico</exception>
        </member>
        <member name="T:HubblePOS.Logging.FilterLoggerNamePrefixMatch">
            <summary>
            Representa un filtro donde se busca que el nombre del logger (esté cualificado o no)
            coincida con el indicado, bien exactamente o que empiece por la cadena indicada
            </summary>
        </member>
        <member name="M:HubblePOS.Logging.FilterLoggerNamePrefixMatch.#ctor(HubblePOS.Logging.IFilter,System.String,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="nextFilter">Siguiente filtro. Puede ser nulo si no hay ninguno</param>
            <param name="loggerNamePrefixToMatch">Cadena de texto por la que debe comenzar o ser igual el nombre (cualificado o no) del logger</param>
            <param name="acceptOnMatch">Indica si hay que decidir aceptar o denegar en caso de coincidir con la condición del filtro</param>
        </member>
        <member name="T:HubblePOS.Logging.FilterLogLevelMatch">
            <summary>
            Representa un filtro donde se busca que el nivel de log coincida exactamente con el indicado
            </summary>
        </member>
        <member name="M:HubblePOS.Logging.FilterLogLevelMatch.#ctor(HubblePOS.Logging.IFilter,HubblePOS.Logging.LogLevelType,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="nextFilter">Siguiente filtro. Puede ser nulo si no hay ninguno</param>
            <param name="logLevelToMatch">Nivel de log que el filtro buscará</param>
            <param name="acceptOnMatch">Indica si hay que decidir aceptar o denegar en caso de coincidir con la condición del filtro</param>
        </member>
        <member name="T:HubblePOS.Logging.FilterLogLevelMatchAny">
            <summary>
            Representa un filtro donde se busca que el nivel de log esté entre una serie de posibilidades
            </summary>
        </member>
        <member name="M:HubblePOS.Logging.FilterLogLevelMatchAny.#ctor(HubblePOS.Logging.IFilter,System.Collections.Generic.IList{HubblePOS.Logging.LogLevelType},System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="nextFilter">Siguiente filtro. Puede ser nulo si no hay ninguno</param>
            <param name="logLevelToMatchList">Lista con los niveles de log para los que el filtro buscará que coincida alguno</param>
            <param name="acceptOnMatch">Indica si hay que decidir aceptar o denegar en caso de coincidir con la condición del filtro</param>
        </member>
        <member name="T:HubblePOS.Logging.FilterLogLevelRange">
            <summary>
            Representa un filtro donde se busca que el nivel de log esté entre un rango de niveles
            </summary>
        </member>
        <member name="M:HubblePOS.Logging.FilterLogLevelRange.#ctor(HubblePOS.Logging.IFilter,HubblePOS.Logging.LogLevelType,HubblePOS.Logging.LogLevelType,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="nextFilter">Siguiente filtro. Puede ser nulo si no hay ninguno</param>
            <param name="logLevelMin">Nivel de log por encima del que tiene que estar o ser igual</param>
            <param name="logLevelMax">Nivel de log por debajo del que tiene que estar o ser igual</param>
            <param name="acceptOnMatch">Indica si hay que decidir aceptar o denegar en caso de coincidir con la condición del filtro</param>
        </member>
        <member name="T:HubblePOS.Logging.FilterMessageSubstring">
            <summary>
            Representa un filtro donde se busca que el mensaje con el que se inicializó el evento contenga o sea igual al texto indicdo
            </summary>
        </member>
        <member name="M:HubblePOS.Logging.FilterMessageSubstring.#ctor(HubblePOS.Logging.IFilter,System.String,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="nextFilter">Siguiente filtro. Puede ser nulo si no hay ninguno</param>
            <param name="substringToMatch">Cadena de texto que debe contener el mensaje con el que fue inicializado el evento de log</param>
            <param name="acceptOnMatch">Indica si hay que decidir aceptar o denegar en caso de coincidir con la condición del filtro</param>
        </member>
        <member name="T:HubblePOS.Logging.FilterMethodNamePrefixMatch">
            <summary>
            Representa un filtro donde se busca que el nombre del método que emitió el evento de log
            coincida con el indicado, bien exactamente o que empiece por la cadena indicada
            </summary>
        </member>
        <member name="M:HubblePOS.Logging.FilterMethodNamePrefixMatch.#ctor(HubblePOS.Logging.IFilter,System.String,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="nextFilter">Siguiente filtro. Puede ser nulo si no hay ninguno</param>
            <param name="methodNamePrefixToMatch">
            Cadena de texto por la que debe comenzar o ser igual el nombre del método que emitió el evento de log.
            Ej: Void DoSomethintInsteresting(Int32, Fool.Core.AThing, Fool.Core.ICandDoThings)
            </param>
            <param name="acceptOnMatch">Indica si hay que decidir aceptar o denegar en caso de coincidir con la condición del filtro</param>
        </member>
        <member name="P:HubblePOS.Logging.LayoutBase.FormattingErrorText">
            <summary>
            Texto a retornar como salida en caso de error al formatear el evento de log
            </summary>
        </member>
        <member name="M:HubblePOS.Logging.LayoutBase.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="formattingErrorText">Texto a retornar como salida en caso de error al formatear el evento de log</param>
        </member>
        <member name="M:HubblePOS.Logging.LayoutCSVInformation.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="formattingErrorText">Texto a retornar como salida en caso de error al formatear el evento de log</param>
        </member>
        <member name="M:HubblePOS.Logging.LayoutCSVInformation.Format(HubblePOS.Logging.LoggingEvent)">
            <summary>
            Formatea el objeto loggingEvent.ParamObject en formato legible en CSV
            Separa cada valor de dentro del paramobject con ";" y añade el mensaje pasado al final
            </summary>
            <param name="loggingEvent">The logging event.</param>
            <returns></returns>
        </member>
        <member name="M:HubblePOS.Logging.LayoutPredefinedFullInformation.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="formattingErrorText">Texto a retornar como salida en caso de error al formatear el evento de log</param>
        </member>
        <member name="M:HubblePOS.Logging.LayoutPredefinedFullInformation.Format(HubblePOS.Logging.LoggingEvent)">
            <summary>
            Formats the specified logging event.
            </summary>
            <param name="loggingEvent">The logging event.</param>
            <returns></returns>
        </member>
        <member name="P:HubblePOS.Logging.Logger.ExternalNeedToParalyzeActivitySyncEvent">
            <summary>
            Artefacto (opcional) para sincronizar la necesidad externa al logger de que este paralice su actividad hasta que deje de ser necesario.
            Típicamente esto ocurre cuando el Manager está realizando tareas de actualización masivas en múltiples loggers, appenders, etc.
            y se requiere que no trabajen hasta que la configuración global del sistema de log está actualizada y sea coherente entre sí.
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.Logger.QualifiedNamePortion">
             /// <summary>
             Porción del nombre cualificado del logger, o el nombre del logger si tiene un nombre simple no cualificado.
             No puede ser nulo, ni vacío ni blancos.
            
             El nombre cualificado completo del logger será la concatenación mediante punto de las respectivas porciones
             de los loggers en la jerarquía del nombre comenzando por el primer descendinte del logger raíz, y ascendiendo
             por dicha jerarquía hasta el presente logger.
            
             Ej:
             un logger tiene como porción "Foo", y su ascendiente en la jerarquía del nombre es "Com"; el nombre
             cualificado completo será "Com.Foo"
             </summary>
        </member>
        <member name="P:HubblePOS.Logging.Logger.IsOwnDebugEnabled">
            <summary>
            Indica si este logger (no sus ascendientes) está configurado explícitamente para operar con el nivel de log Debug.
            (el logger usará el valor del primer ascendiente en la jerarquía del nombre cualificado en caso de no estar especificado)
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.Logger.IsOwnInfoEnabled">
            <summary>
            Indica si este logger (no sus ascendientes) está configurado explícitamente para operar con el nivel de log Info.
            (el logger usará el valor del primer ascendiente en la jerarquía del nombre cualificado en caso de no estar especificado)
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.Logger.IsOwnWarningEnabled">
            <summary>
            Indica si este logger (no sus ascendientes) está configurado explícitamente para operar con el nivel de log Warning.
            (el logger usará el valor del primer ascendiente en la jerarquía del nombre cualificado en caso de no estar especificado)
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.Logger.IsOwnFailEnabled">
            <summary>
            Indica si este logger (no sus ascendientes) está configurado explícitamente para operar con el nivel de log Fail.
            (el logger usará el valor del primer ascendiente en la jerarquía del nombre cualificado en caso de no estar especificado)
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.Logger.IsOwnErrorEnabled">
            <summary>
            Indica si este logger (no sus ascendientes) está configurado explícitamente para operar con el nivel de log Error.
            (el logger usará el valor del primer ascendiente en la jerarquía del nombre cualificado en caso de no estar especificado)
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.Logger.IsOwnFatalEnabled">
            <summary>
            Indica si este logger (no sus ascendientes) está configurado explícitamente para operar con el nivel de log Fatal.
            (el logger usará el valor del primer ascendiente en la jerarquía del nombre cualificado en caso de no estar especificado)
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.Logger.OwnAppenderList">
            <summary>
            Lista de appenders especificados expresanmente para el logger.
            Según lo especificado por la aditividad de appenders, adicionalmente
            se usarán los de su ascendiente en la jerarquía del nombre cualificado
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.Logger.IsAppendersAdditivityActivated">
            <summary>
            Indica si está activada la aditividad de appernders.
            En caso afirmativo, además de los apenders especificados en el presente loggers,
            se usarán los que correspondan a su ascendiente en la jerarquía del nombre cualificado
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.Logger.IsClosed">
            <summary>
            Indica si está cerrado el logger. En tal caso ignorará cualquier petición de log
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.Logger.AscendantInQualifiedNameHierarchy">
            <summary>
            Acendiente en la jerarquía del nombre cualificado de este logger.
            Nulo en caso de no haber ninguno
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.Logger.DescendantInQualifiedNameHierarchyList">
            <summary>
            Descendiente en la jerarquía del nombre cualificado de este logger
            Nulo en caso de no haber ninguno
            </summary>
        </member>
        <member name="M:HubblePOS.Logging.Logger.#ctor(System.String,HubblePOS.Logging.ILogger,System.Threading.ManualResetEvent)">
            <summary>
            Constructor
            </summary>
            <param name="qualifiedNamePortion">Porción del nombre cualificado del logger. No puede ser nulo, ni vacío ni blancos (se autogenerará uno en caso contrario)</param>
            <param name="ascendantInQualifiedNameHierarchy">Acendiente en la jerarquía del nombre cualificado de este logger. Nulo en caso de no haber ninguno</param>
            <param name="externalNeedToParalyzeActivitySyncEvent">Gestor del evento de sincronización para la necesidad externa de paralizar la actividad del logger. Nulo si no hay ninguno</param>
        </member>
        <member name="M:HubblePOS.Logging.Logger.Configure(HubblePOS.Logging.LoggerConfiguration)">
            <exception cref="T:HubblePOS.Logging.ValidationException">Entrada no válida</exception>
        </member>
        <member name="M:HubblePOS.Logging.Logger.CreateLoggingEvent(HubblePOS.Logging.LogLevelType,System.String,System.String,System.Int32,System.Exception,System.Object,System.Diagnostics.StackTrace)">
            <summary>
            Crea un evento de log a partir de la información suministrada y la interna de este logger
            </summary>
            <param name="logLevel">Nivel de log del evento a crear</param>
            <param name="message">Mensaje usado para inicializar el evento de log. Nulo si no hay ninguno</param>
            <param name="callerMethodName">Nombre del método desde el que se emite el evento de log</param>
            <param name="callerMethodLineNumber">Número de línea desde la que se emite el evennto de log</param>
            <param name="ex">Excepción usada para inicializar el evento de log. Nula si no hay ninguna</param>
            <param name="contextObject">Objeto de contexto usados para inicializar el evento de log. Nulo si no hay ninguno</param>
            <param name="eventEmitterStackTrace">Traza de pila relacionada con la emisión del evento, a partir del emisor del evento</param>
            <returns>Evento de log. Nulo si no ha podido crearse uno</returns>
        </member>
        <member name="M:HubblePOS.Logging.Logger.GetCurrentThreadInfo">
            <summary>
            Obtiene información del subproceso actual
            </summary>
            <returns></returns>
        </member>
        <member name="M:HubblePOS.Logging.Logger.DoAppendOnAllAppenders(HubblePOS.Logging.LoggingEvent)">
            <summary>
            Transfiere el evento de log a todos los appenders disponibles para el logger.
            Dichos appenders lo aceptarán, independientemente de que luego deban descartar el evento por algún motivo
            </summary>
            <param name="loggingEvent">Evento de log</param>
        </member>
        <member name="P:HubblePOS.Logging.LogManager.ConfigurationSyncEvent">
            <summary>
            Artefacto de sincronización para paralizar la actividad del ecosistema de log mientras se propaga nueva configuración
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.LogManager.CurrentConfiguration">
            <summary>
            Configuración actual para el LogManager
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.LogManager.CurrentLoggerInstancesDictionary">
            <summary>
            Diccionario con todas las instancias de los loggers actualmete creadas (incluido Root)
            Siempre existirá como mínimo una, que será el logger Raíz, cuyo nombre está establecido por configuración y reservado
            [Key]: nombre completo (cualificado o simple) del logger.
            [Value]: instancia del logger
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.LogManager.CurrentAppenderInstancesDictionary">
            <summary>
            Diccionario con todas las instancias de los appenders actualmente creadas.
            [Key]: nombre del appender.
            [Value]: instancia del appender
            </summary>
        </member>
        <member name="M:HubblePOS.Logging.LogManager.Configure(HubblePOS.Logging.LogManagerConfiguration)">
            <summary>
            Establece la configuración con la que debe operar este ecosistema de logging.
            La configuración será analizada antes de su aplicación:
            Si es CORRECTA:
                + se aplicará, sobrescribiendo cualquier configuración anterior.
                + se propagarán los cambios tanto al manager como a los posibles loggers y artefactos existentes.
            Si es INCORRECTA:
                + se descartará la nueva configuración.
                + no habrá cambios en el comportamiento del manager ni en los posibles loggers y artefactos existentes.
            </summary>
            <param name="configuration">Configuración</param>
            <exception cref="T:HubblePOS.Logging.ValidationException">Entrada no válida</exception>
        </member>
        <member name="M:HubblePOS.Logging.LogManager.ConfigureFromXMLConfigurationFile(System.String)">
            <summary>
            [CAUTION: NOT IMPLEMENTED]
            
            Recupera y establece la configuración con la que debe operar este ecosistema de logging, a partir de un fichero de configuración xml en el sistema de archivos.
            Una vez recuperada del fichero, la configuración será analizada de forma previa a su aplicación:
            Si es CORRECTA:
                + se aplicará, sobrescribiendo cualquier configuración anterior.
                + se propagarán los cambios tanto al manager como a los posibles loggers y artefactos existentes.
            Si es INCORRECTA:
                + se descartará la nueva configuración.
                + no habrá cambios en el comportamiento del manager ni en los posibles loggers y artefactos existentes.
            </summary>
            <param name="fileFullPath">Ruta completa (absoluta e incluyendo extensión archivo) del archivo de configuración. Ej: C:\hubblePOSLoggerConfig.xml</param>
            <exception cref="T:HubblePOS.Logging.ValidationException">Entrada no válida: no hay ruta, o esta está mal formada</exception>
            <exception cref="T:HubblePOS.Logging.InaccessibleFileException">Fichero no accesible por algún motivo (no existe, falta permisos, exclusividad de otro proceso...)</exception>
            <exception cref="T:HubblePOS.Logging.NotValidConfigurationException">La configuración recuperada no es válida</exception>
        </member>
        <member name="M:HubblePOS.Logging.LogManager.GetLogger(System.Type)">
            <summary>
            Obtiene un logger a partir del tipo de artefacto (clase, etc) que se planea que lo use.
            
            El nombre del logger a devolver se obtendrá del tipo (cualificado) indicado.
            Si ya existía, devolverá esa instancia. Si no, se creará un nuevo logger cuyo nombre coincida con el tipo cualificado indicado.
            Retornará null, si:
                + el tipo pasado es null.
                + se ha producido un error.
            </summary>
            <param name="relatedTypeToLog">Tipo de artefacto para el que se planea que se use el logger</param>
            <returns>Logger con el nombre igual al tipo indicado. Null en caso de no haber indicado uno</returns>
        </member>
        <member name="M:HubblePOS.Logging.LogManager.GetLogger(System.String)">
            <summary>
            Obtiene un logger a partir de su nombre (cualificado o simple).
            
            Si ya existía, devolverá esa instancia. Si no, la creará.
            Retornará null, si:
                + el nombre pasado es null, cadena vacía o blancos.
                + el nombre contiene blancos
                + se ha producido un error.
            </summary>
            <param name="loggerName">Nombre del logger</param>
            <returns>Logger con el nombre indicado. Null en caso de error o no haber indicado un nombre</returns>
        </member>
        <member name="M:HubblePOS.Logging.LogManager.Close">
            <summary>
            Cierra todos los loggers y appenders actuales.
            Se considera un error de programación llamar otra vez a un LogManager cerrado.
            </summary>
            <returns>Tarea</returns>
        </member>
        <member name="M:HubblePOS.Logging.LogManager.GetOrCreateLoggerByQualifiedName(System.String)">
            <summary>
            Crea u obtiene un logger.
            En el caso de la creción, se encarga de generar todos los loggers intermedios en la jerarquía del nombre cualificado.
            Valida la corrección del nombre indicado.
            </summary>
            <param name="loggerQualifiedName">Nombre completo (cualificado o simple) del logger</param>
            <returns>Logger o null en caso de error</returns>
        </member>
        <member name="M:HubblePOS.Logging.LogManager.CalculateLoggerConfiguration(HubblePOS.Logging.LogManagerConfigurationLogger,System.Collections.Concurrent.ConcurrentDictionary{System.String,HubblePOS.Logging.IAppender})">
            <summary>
            Genera un DAO para configurar un logger a partir de un DAO de configuración para loggers del LogManager y el diccionario de instancias de appenders.
            </summary>
            <param name="loggerManagerLoggerConfiguration">Configuración para configuración de loggers del LogManager</param>
            <param name="appenderInstancesDictionary">Diccionario de instancias de appenders</param>
            <returns>Configuración para un logger. Null en caso de error</returns>
        </member>
        <member name="M:HubblePOS.Logging.IAppender.Configure(HubblePOS.Logging.AppenderConfigurationBase)">
            <summary>
            Establece la configuración con la que operar el appender
            La configuración será analizada antes de su aplicación:
            Si es CORRECTA:
                + se aplicará, sobrescribiendo cualquier configuración anterior
            Si es INCORRECTA:
                + se descartará la nueva configuración, permaneciendo la configuración anterior.
            </summary>
            <param name="configuration">Configuración</param>
            <exception cref="T:HubblePOS.Logging.ValidationException">Entrada no válida</exception>
        </member>
        <member name="P:HubblePOS.Logging.IAppender.Name">
            <summary>
            Nombre del appender
            </summary>
        </member>
        <member name="M:HubblePOS.Logging.IAppender.DoAppend(HubblePOS.Logging.LoggingEvent)">
            <summary>
            Añade el evento al log.
            Este método retornará lo antes posible, almacenándolo en una estructura interna
            para que pueda ser persistido en el log correspondiente en segundo plano.
            </summary>
            <param name="loggingEvent">Evento de log a añadir al log</param>
            <returns>Tarea</returns>
        </member>
        <member name="M:HubblePOS.Logging.IAppender.Close">
            <summary>
            Libera recursos reservados por el appender como manejadores de fichero.
            Dejará de admitir peticiones de adición de eventos de log, y previamente a liberar los resursops
            intentará gestionar cualquier evento pendiente que pueda tener en sus estructuras internas.
            Si en un tiempo no lo consigue, desistirá y procedeá a liberar recursos.
            
            Se considera un error de programación llamar a un appender ya cerrado.
            </summary>
            <returns>Tarea</returns>
        </member>
        <member name="P:HubblePOS.Logging.IFilter.NextFilter">
            <summary>
            Siguiente filtro. Nulo si no hay ninguno.
            Ej: cadena de filtros de un appender
            </summary>
        </member>
        <member name="M:HubblePOS.Logging.IFilter.Decide(HubblePOS.Logging.LoggingEvent)">
            <summary>
            Decide, según los criterios del filtro, si el evento de log debe
            logarse mediante el/los appender/s que esté/n usando el presente 
            filtro como herramienta de decisión condicional.
            
            En caso de error procesando la decisión, se retornará valor neutral (no concluyente).
            Por defecto, un resultado no concluyente (neutral) implicará aceptación
            </summary>
            <param name="loggingEvent">Evento de log sobre el que decidide</param>
            <returns>Veredicto del proceso de decisión</returns>
        </member>
        <member name="M:HubblePOS.Logging.IFilter.DecideThroughFilterChain(HubblePOS.Logging.LoggingEvent)">
            <summary>
            Decide, mediante la cadena de filtros que se inicia con el presente filtro,
            si el evento de log debe logarse mediante el/los appender/s que esté/n usando
            como herramienta de decisión condicional el presente filtro así como el resto de cadena.
            
            Se procede de la siguiente manera:
            + se comienza valorando el presente filtro.
            + si acepta, finaliza la cadena de decisiones y se retorna aceptación.
            + si deniega, finaliza la cadena de decisiones y se retorna denegación.
            + si el resultado es neutro, se pregunta al siguiente filtro en la cadena, en caso de haberlo y se devolverá su valor de retorno.
            + el siguiente filtro aplicará la misma lógica, así sucesivamente hasta el final de la cadena
            
            En caso de error procesando la decisión, se retornará valor neutral (no concluyente).
            Por defecto, un resultado no concluyente (neutral) implicará aceptación
            </summary>
            <param name="loggingEvent">Evento de log sobre el que decidide</param>
            <returns>Veredicto del proceso de decisión</returns>
        </member>
        <member name="M:HubblePOS.Logging.ILayout.Format(HubblePOS.Logging.LoggingEvent)">
            <summary>
            Formatea una cadena de texto a partir del evento de log.
            Si no hay podido, retorna cadena predefinida de error 
            (por defecto: cadena vacía). Nunca devolverá null
            </summary>
            <param name="loggingEvent">Evento de log</param>
            <returns>Cadena con una representación de texto del evento de log. En caso de error, cadena predefinida de error</returns>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.Configure(HubblePOS.Logging.LoggerConfiguration)">
            <summary>
            Establece la configuración con la que debe operar el logger.
            La configuración será analizada antes de su aplicación:
            Si es CORRECTA:
                + se aplicará, sobrescribiendo cualquier configuración anterior.
            Si es INCORRECTA:
                + se descartará la nueva configuración, permaneciendo la configuración anterior.
            
            Si el nombre de un logger es cualificado, la configuración de un logger designado 
            con un nombre que es parte más general del nombre de otro, será heredada también por este último;
            y en caso de colisión de configuraciones primará la del último por considerarse más específica. 
            
            Ejemplo:
            Un logger nombrado por HubblePOS.Core tendrá una una configuración determinada. 
            Otro logger nombrado por HubblePO.Core.CustomerBC heredará la configuración del anterior como base 
            a la que añadirá la suya propia (en caso de conflicto primará la suya)
            </summary>
            <param name="configuration">Configuración</param>
            <exception cref="T:HubblePOS.Logging.ValidationException">Entrada no válida</exception>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.AddDescendantInQualifiedNameHierarchy(HubblePOS.Logging.ILogger)">
            <summary>
            Añade al presente logger, otro como descendiente en la jerarquía del nombre cualificado.
            Si el logger a añadir no existe o ya hay un descendiente con el mismo nombre, no se hace nada
            </summary>
            <param name="descendantLogger">Logger descendiente</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.CheckLoggerIsDescendantInQualifiedNameHierarchy(HubblePOS.Logging.ILogger)">
            <summary>
            Comprueba si el logger indicado es descendiente en la jerarquía del nombre cualificado
            </summary>
            <param name="possibleDescendantLogger">Logger a comprobar si es descendiente</param>
            <returns>True si es descendiente. False en caso contrario</returns>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.CheckLoggerIsDescendantInQualifiedNameHierarchy(System.String)">
            <summary>
            Comprueba si el logger indicado es descendiente en la jerarquía del nombre cualificado
            </summary>
            <param name="possibleDescendantLogger">Logger a comprobar si es descendiente</param>
            <returns>True si es descendiente. False en caso contrario</returns>
        </member>
        <member name="P:HubblePOS.Logging.ILogger.Name">
            <summary>
            Nombre completo del logger.
            Si el nombre del logger es un nombre cualificado, esta 
            propiedad contendrá el nombre con todas las partes.
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.ILogger.IsRootLogger">
            <summary>
            Indica si es el logger raíz
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.ILogger.AppenderList">
            <summary>
            Lista de todos los appenders relacionados con este logger.
            Es la unión de los indicados explícitamente para este logger, 
            más todos aquellos que pudieran estar indicados para los loggers
            ascendientes en la jeraquía del nombre cualificado, si se trata
            de un logger con nombre cualificado.
            
            Los appenders serán únicos (no estarán repetidos).
            Lista vacía en caso de no haber ninguno
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.ILogger.IsDebugEnabled">
            <summary>
            ¿Puede el logger encargarse de eventos de nivel Debug?
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.ILogger.IsInfoEnabled">
            <summary>
            ¿Puede el logger encargarse de eventos de nivel Info?
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.ILogger.IsWarningEnabled">
            <summary>
            ¿Puede el logger encargarse de eventos de nivel Warning?
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.ILogger.IsFailEnabled">
            <summary>
            ¿Puede el logger encargarse de eventos de nivel Fail?
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.ILogger.IsErrorEnabled">
            <summary>
            ¿Puede el logger encargarse de eventos de nivel Error?
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.ILogger.IsFatalEnabled">
            <summary>
            ¿Puede el logger encargarse de eventos de nivel Fatal?
            </summary>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.LogDebug(System.String,System.String,System.Int32)">
            <summary>
            Emite un evento de log con nivel Debug
            </summary>
            <param name="message">Mensaje informativo con el que inicializar el evento de log</param>
            <param name="memberName">Nombre del método que recibe el evento de log. No pasar este parámetro</param>
            <param name="sourceLineNumber">Número de línea desde la que se emite el evento de log. No pasar este parámetro</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.LogInfo(System.String,System.String,System.Int32)">
            <summary>
            Emite un evento de log a nivel de Info
            </summary>
            <param name="message">Mensaje informativo con el que inicializar el evento de log</param>
            <param name="memberName">Nombre del método que recibe el evento de log. No pasar este parámetro</param>
            <param name="sourceLineNumber">Número de línea desde la que se emite el evento de log. No pasar este parámetro</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.LogWarning(System.String,System.String,System.Int32)">
            <summary>
            Emite un evento de log a nivel de Warning
            </summary>
            <param name="message">Mensaje informativo con el que inicializar el evento de log</param>
            <param name="memberName">Nombre del método que recibe el evento de log. No pasar este parámetro</param>
            <param name="sourceLineNumber">Número de línea desde la que se emite el evento de log. No pasar este parámetro</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.LogFail(System.String,System.String,System.Int32)">
            <summary>
            Emite un evento de log a nivel de Fail
            </summary>
            <param name="message">Mensaje informativo con el que inicializar el evento de log</param>
            <param name="memberName">Nombre del método que recibe el evento de log. No pasar este parámetro</param>
            <param name="sourceLineNumber">Número de línea desde la que se emite el evento de log. No pasar este parámetro</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.LogError(System.String,System.String,System.Int32)">
            <summary>
            Emite un evento de log a nivel de Error
            </summary>
            <param name="message">Mensaje informativo con el que inicializar el evento de log</param>
            <param name="memberName">Nombre del método que recibe el evento de log. No pasar este parámetro</param>
            <param name="sourceLineNumber">Número de línea desde la que se emite el evento de log. No pasar este parámetro</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.LogFatal(System.String,System.String,System.Int32)">
            <summary>
            Emite un evento de log a nivel de Fatal
            </summary>
            <param name="message">Mensaje informativo con el que inicializar el evento de log</param>
            <param name="memberName">Nombre del método que recibe el evento de log. No pasar este parámetro</param>
            <param name="sourceLineNumber">Número de línea desde la que se emite el evento de log. No pasar este parámetro</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.LogDebug(System.Exception,System.String,System.Int32)">
            <summary>
            Emite un evento de log con nivel Debug
            </summary>
            <param name="ex">Excepción con la que inicializar el evento de log</param>
            <param name="memberName">Nombre del método que recibe el evento de log. No pasar este parámetro</param>
            <param name="sourceLineNumber">Número de línea desde la que se emite el evento de log. No pasar este parámetro</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.LogInfo(System.Exception,System.String,System.Int32)">
            <summary>
            Emite un evento de log con nivel Info
            </summary>
            <param name="ex">Excepción con la que inicializar el evento de log</param>
            <param name="memberName">Nombre del método que recibe el evento de log. No pasar este parámetro</param>
            <param name="sourceLineNumber">Número de línea desde la que se emite el evento de log. No pasar este parámetro</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.LogWarning(System.Exception,System.String,System.Int32)">
            <summary>
            Emite un evento de log con nivel Warning
            </summary>
            <param name="ex">Excepción con la que inicializar el evento de log</param>
            <param name="memberName">Nombre del método que recibe el evento de log. No pasar este parámetro</param>
            <param name="sourceLineNumber">Número de línea desde la que se emite el evento de log. No pasar este parámetro</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.LogFail(System.Exception,System.String,System.Int32)">
            <summary>
            Emite un evento de log con nivel Fail
            </summary>
            <param name="ex">Excepción con la que inicializar el evento de log</param>
            <param name="memberName">Nombre del método que recibe el evento de log. No pasar este parámetro</param>
            <param name="sourceLineNumber">Número de línea desde la que se emite el evento de log. No pasar este parámetro</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.LogError(System.Exception,System.String,System.Int32)">
            <summary>
            Emite un evento de log con nivel Error
            </summary>
            <param name="ex">Excepción con la que inicializar el evento de log</param>
            <param name="memberName">Nombre del método que recibe el evento de log. No pasar este parámetro</param>
            <param name="sourceLineNumber">Número de línea desde la que se emite el evento de log. No pasar este parámetro</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.LogFatal(System.Exception,System.String,System.Int32)">
            <summary>
            Emite un evento de log con nivel Fatal
            </summary>
            <param name="ex">Excepción con la que inicializar el evento de log</param>
            <param name="memberName">Nombre del método que recibe el evento de log. No pasar este parámetro</param>
            <param name="sourceLineNumber">Número de línea desde la que se emite el evento de log. No pasar este parámetro</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.LogDebug(System.String,System.Exception,System.String,System.Int32)">
            <summary>
            Emite un evento de log con nivel Debug
            </summary>
            <param name="message">Mensaje informativo con el que inicializar el evento de log</param>
            <param name="ex">Excepción con la que inicializar el evento de log</param>
            <param name="memberName">Nombre del método que recibe el evento de log. No pasar este parámetro</param>
            <param name="sourceLineNumber">Número de línea desde la que se emite el evento de log. No pasar este parámetro</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.LogInfo(System.String,System.Exception,System.String,System.Int32)">
            <summary>
            Emite un evento de log con nivel Info
            </summary>
            <param name="message">Mensaje informativo con el que inicializar el evento de log</param>
            <param name="ex">Excepción con la que inicializar el evento de log</param>
            <param name="memberName">Nombre del método que recibe el evento de log. No pasar este parámetro</param>
            <param name="sourceLineNumber">Número de línea desde la que se emite el evento de log. No pasar este parámetro</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.LogWarning(System.String,System.Exception,System.String,System.Int32)">
            <summary>
            Emite un evento de log con nivel Warning
            </summary>
            <param name="message">Mensaje informativo con el que inicializar el evento de log</param>
            <param name="ex">Excepción con la que inicializar el evento de log</param>
            <param name="memberName">Nombre del método que recibe el evento de log. No pasar este parámetro</param>
            <param name="sourceLineNumber">Número de línea desde la que se emite el evento de log. No pasar este parámetro</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.LogFail(System.String,System.Exception,System.String,System.Int32)">
            <summary>
            Emite un evento de log con nivel Fail
            </summary>
            <param name="message">Mensaje informativo con el que inicializar el evento de log</param>
            <param name="ex">Excepción con la que inicializar el evento de log</param>
            <param name="memberName">Nombre del método que recibe el evento de log. No pasar este parámetro</param>
            <param name="sourceLineNumber">Número de línea desde la que se emite el evento de log. No pasar este parámetro</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.LogError(System.String,System.Exception,System.String,System.Int32)">
            <summary>
            Emite un evento de log con nivel Error
            </summary>
            <param name="message">Mensaje informativo con el que inicializar el evento de log</param>
            <param name="ex">Excepción con la que inicializar el evento de log</param>
            <param name="memberName">Nombre del método que recibe el evento de log. No pasar este parámetro</param>
            <param name="sourceLineNumber">Número de línea desde la que se emite el evento de log. No pasar este parámetro</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.LogFatal(System.String,System.Exception,System.String,System.Int32)">
            <summary>
            Emite un evento de log con nivel Fatal
            </summary>
            <param name="message">Mensaje informativo con el que inicializar el evento de log</param>
            <param name="ex">Excepción con la que inicializar el evento de log</param>
            <param name="memberName">Nombre del método que recibe el evento de log. No pasar este parámetro</param>
            <param name="sourceLineNumber">Número de línea desde la que se emite el evento de log. No pasar este parámetro</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.LogDebug(System.String,System.Object,System.String,System.Int32)">
            <summary>
            Emite un evento de log con nivel Debug
            </summary>
            <param name="message">Mensaje informativo con el que inicializar el evento de log</param>
            <param name="contextObject">Objeto que aporta información de contexto, con los que inicializar el evento de log</param>
            <param name="memberName">Nombre del método que recibe el evento de log. No pasar este parámetro</param>
            <param name="sourceLineNumber">Número de línea desde la que se emite el evento de log. No pasar este parámetro</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.LogInfo(System.String,System.Object,System.String,System.Int32)">
            <summary>
            Emite un evento de log con nivel Info
            </summary>
            <param name="message">Mensaje informativo con el que inicializar el evento de log</param>
            <param name="contextObject">Objeto que aporta información de contexto, con los que inicializar el evento de log</param>
            <param name="memberName">Nombre del método que recibe el evento de log. No pasar este parámetro</param>
            <param name="sourceLineNumber">Número de línea desde la que se emite el evento de log. No pasar este parámetro</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.LogWarning(System.String,System.Object,System.String,System.Int32)">
            <summary>
            Emite un evento de log con nivel Warning
            </summary>
            <param name="message">Mensaje informativo con el que inicializar el evento de log</param>
            <param name="contextObject">Objeto que aporta información de contexto, con los que inicializar el evento de log</param>
            <param name="memberName">Nombre del método que recibe el evento de log. No pasar este parámetro</param>
            <param name="sourceLineNumber">Número de línea desde la que se emite el evento de log. No pasar este parámetro</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.LogFail(System.String,System.Object,System.String,System.Int32)">
            <summary>
            Emite un evento de log con nivel Fail
            </summary>
            <param name="message">Mensaje informativo con el que inicializar el evento de log</param>
            <param name="contextObject">Objeto que aporta información de contexto, con los que inicializar el evento de log</param>
            <param name="memberName">Nombre del método que recibe el evento de log. No pasar este parámetro</param>
            <param name="sourceLineNumber">Número de línea desde la que se emite el evento de log. No pasar este parámetro</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.LogError(System.String,System.Object,System.String,System.Int32)">
            <summary>
            Emite un evento de log con nivel Error
            </summary>
            <param name="message">Mensaje informativo con el que inicializar el evento de log</param>
            <param name="contextObject">Objeto que aporta información de contexto, con los que inicializar el evento de log</param>
            <param name="memberName">Nombre del método que recibe el evento de log. No pasar este parámetro</param>
            <param name="sourceLineNumber">Número de línea desde la que se emite el evento de log. No pasar este parámetro</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.LogFatal(System.String,System.Object,System.String,System.Int32)">
            <summary>
            Emite un evento de log con nivel Fatal
            </summary>
            <param name="message">Mensaje informativo con el que inicializar el evento de log</param>
            <param name="contextObject">Objeto que aporta información de contexto, con los que inicializar el evento de log</param>
            <param name="memberName">Nombre del método que recibe el evento de log. No pasar este parámetro</param>
            <param name="sourceLineNumber">Número de línea desde la que se emite el evento de log. No pasar este parámetro</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.LogDebug(System.Exception,System.Object,System.String,System.Int32)">
            <summary>
            Emite un evento de log con nivel Debug
            </summary>
            <param name="ex">Excepción con la que inicializar el evento de log</param>
            <param name="contextObject">Array de objetos que aportan información de contexto, con los que inicializar el evento de log</param>
            <param name="memberName">Nombre del método que recibe el evento de log. No pasar este parámetro</param>
            <param name="sourceLineNumber">Número de línea desde la que se emite el evento de log. No pasar este parámetro</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.LogInfo(System.Exception,System.Object,System.String,System.Int32)">
            <summary>
            Emite un evento de log con nivel Info
            </summary>
            <param name="ex">Excepción con la que inicializar el evento de log</param>
            <param name="contextObject">Array de objetos que aportan información de contexto, con los que inicializar el evento de log</param>
            <param name="memberName">Nombre del método que recibe el evento de log. No pasar este parámetro</param>
            <param name="sourceLineNumber">Número de línea desde la que se emite el evento de log. No pasar este parámetro</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.LogWarning(System.Exception,System.Object,System.String,System.Int32)">
            <summary>
            Emite un evento de log con nivel Warning
            </summary>
            <param name="ex">Excepción con la que inicializar el evento de log</param>
            <param name="contextObject">Array de objetos que aportan información de contexto, con los que inicializar el evento de log</param>
            <param name="memberName">Nombre del método que recibe el evento de log. No pasar este parámetro</param>
            <param name="sourceLineNumber">Número de línea desde la que se emite el evento de log. No pasar este parámetro</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.LogFail(System.Exception,System.Object,System.String,System.Int32)">
            <summary>
            Emite un evento de log con nivel Fail
            </summary>
            <param name="ex">Excepción con la que inicializar el evento de log</param>
            <param name="contextObject">Array de objetos que aportan información de contexto, con los que inicializar el evento de log</param>
            <param name="memberName">Nombre del método que recibe el evento de log. No pasar este parámetro</param>
            <param name="sourceLineNumber">Número de línea desde la que se emite el evento de log. No pasar este parámetro</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.LogError(System.Exception,System.Object,System.String,System.Int32)">
            <summary>
            Emite un evento de log con nivel Error
            </summary>
            <param name="ex">Excepción con la que inicializar el evento de log</param>
            <param name="contextObject">Array de objetos que aportan información de contexto, con los que inicializar el evento de log</param>
            <param name="memberName">Nombre del método que recibe el evento de log. No pasar este parámetro</param>
            <param name="sourceLineNumber">Número de línea desde la que se emite el evento de log. No pasar este parámetro</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.LogFatal(System.Exception,System.Object,System.String,System.Int32)">
            <summary>
            Emite un evento de log con nivel fatal
            </summary>
            <param name="ex">Excepción con la que inicializar el evento de log</param>
            <param name="contextObject">Array de objetos que aportan información de contexto, con los que inicializar el evento de log</param>
            <param name="memberName">Nombre del método que recibe el evento de log. No pasar este parámetro</param>
            <param name="sourceLineNumber">Número de línea desde la que se emite el evento de log. No pasar este parámetro</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.LogDebug(System.String,System.Exception,System.Object,System.String,System.Int32)">
            <summary>
            Emite un evento de log con nivel Debug
            </summary>
            <param name="message">Mensaje informativo con el que inicializar el evento de log</param>
            <param name="ex">Excepción con la que inicializar el evento de log</param>
            <param name="contextObject">Array de objetos que aportan información de contexto, con los que inicializar el evento de log</param>
            <param name="memberName">Nombre del método que recibe el evento de log. No pasar este parámetro</param>
            <param name="sourceLineNumber">Número de línea desde la que se emite el evento de log. No pasar este parámetro</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.LogInfo(System.String,System.Exception,System.Object,System.String,System.Int32)">
            <summary>
            Emite un evento de log con nivel Info
            </summary>
            <param name="message">Mensaje informativo con el que inicializar el evento de log</param>
            <param name="ex">Excepción con la que inicializar el evento de log</param>
            <param name="contextObject">Array de objetos que aportan información de contexto, con los que inicializar el evento de log</param>
            <param name="memberName">Nombre del método que recibe el evento de log. No pasar este parámetro</param>
            <param name="sourceLineNumber">Número de línea desde la que se emite el evento de log. No pasar este parámetro</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.LogWarning(System.String,System.Exception,System.Object,System.String,System.Int32)">
            <summary>
            Emite un evento de log con nivel Warning
            </summary>
            <param name="message">Mensaje informativo con el que inicializar el evento de log</param>
            <param name="ex">Excepción con la que inicializar el evento de log</param>
            <param name="contextObject">Array de objetos que aportan información de contexto, con los que inicializar el evento de log</param>
            <param name="memberName">Nombre del método que recibe el evento de log. No pasar este parámetro</param>
            <param name="sourceLineNumber">Número de línea desde la que se emite el evento de log. No pasar este parámetro</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.LogFail(System.String,System.Exception,System.Object,System.String,System.Int32)">
            <summary>
            Emite un evento de log con nivel Fail
            </summary>
            <param name="message">Mensaje informativo con el que inicializar el evento de log</param>
            <param name="ex">Excepción con la que inicializar el evento de log</param>
            <param name="contextObject">Array de objetos que aportan información de contexto, con los que inicializar el evento de log</param>
            <param name="memberName">Nombre del método que recibe el evento de log. No pasar este parámetro</param>
            <param name="sourceLineNumber">Número de línea desde la que se emite el evento de log. No pasar este parámetro</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.LogError(System.String,System.Exception,System.Object,System.String,System.Int32)">
            <summary>
            Emite un evento de log con nivel Error
            </summary>
            <param name="message">Mensaje informativo con el que inicializar el evento de log</param>
            <param name="ex">Excepción con la que inicializar el evento de log</param>
            <param name="contextObject">Array de objetos que aportan información de contexto, con los que inicializar el evento de log</param>
            <param name="memberName">Nombre del método que recibe el evento de log. No pasar este parámetro</param>
            <param name="sourceLineNumber">Número de línea desde la que se emite el evento de log. No pasar este parámetro</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.LogFatal(System.String,System.Exception,System.Object,System.String,System.Int32)">
            <summary>
            Emite un evento de log con nivel Fatal
            </summary>
            <param name="message">Mensaje informativo con el que inicializar el evento de log</param>
            <param name="ex">Excepción con la que inicializar el evento de log</param>
            <param name="contextObject">Array de objetos que aportan información de contexto, con los que inicializar el evento de log</param>
            <param name="memberName">Nombre del método que recibe el evento de log. No pasar este parámetro</param>
            <param name="sourceLineNumber">Número de línea desde la que se emite el evento de log. No pasar este parámetro</param>
        </member>
        <member name="M:HubblePOS.Logging.ILogger.Close">
            <summary>
            Libera recursos reservados por el logger y deja de atender peticiones de log, ignorándolas
            Se considera un error de programación llamar a un appender ya cerrado.
            </summary>
            <returns>Tarea</returns>
        </member>
        <member name="T:HubblePOS.Logging.AppenderConfigurationBase">
            <summary>
            Representa la configuración para un appender
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.AppenderConfigurationBase.FilterHead">
            <summary>
            Primer filtro de la posible cadena de filtros para el appender.
            Nulo en caso de no haber ninguno
            </summary>
        </member>
        <member name="T:HubblePOS.Logging.AppenderConfigurationFile">
            <summary>
            Representa la configuración para un appender tipo file
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.AppenderConfigurationFile.FullFilePath">
            <summary>
            Ruta completa del archivo, incluida la unidad, arbol de directorios y extensión.
            No puede ser nulo, y debe ser una ruta bien formada.
            Ej: C:\Logs\log.txt
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.AppenderConfigurationFile.Layout">
            <summary>
            Layout a utilizar para presentar el evento de log.
            No puede ser nulo
            </summary>
        </member>
        <member name="T:HubblePOS.Logging.AppenderConfigurationRollingFile">
            <summary>
            Representa la configuración para un appender tipo rolling file
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.AppenderConfigurationRollingFile.MaximumFileSizeInBytes">
            <summary>
            Tamaño máximo en bytes del fichero de log principal.
            El valor debe ser superior a 1024.
            Null significa sin límite en este criterio.
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.AppenderConfigurationRollingFile.MaximumHoursOld">
            <summary>
            Máxima antiguedad del fichero de log principal, en horas (desde su creación).
            El valor debe ser mayor que 0.
            Null significa sin límite en este criterio.
            
            No null es imcompatible con los siguientes valores de configuración:
            + MaximumAmountRollBackups con valor 0.
            + RollBackupsDirectoryFullPath nulo (o no válido).
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.AppenderConfigurationRollingFile.MaximumAmountRollBackups">
            <summary>
            Número máximo de archivos de backup circulantes.
            Posibles valores:
                + >0: número de archivos de backup; tras superar dicho número se borrará el más antiguo
                + 0: no se harán backups; en tal caso si hay un criterio de tamaño máximo el contenido al principio del fichero será purgado para satisfacer dicho criterio
                + Null: sin límite
                
            El valor 0 es incompatible con los siguientes valores de configuración:
                + MaximumHoursOld distinto de null (y mayor que 0)
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.AppenderConfigurationRollingFile.RollBackupsDirectoryFullPath">
            <summary>
            Ruta completa del arbol de directorios donde ubicar los backups circulantes.
            
            Null es incompatible con los siguientes valores de configuración:
                + MaximumHoursOld distinto de null (y mayor que 0).
                + MaximumAmountRollBackups null o mayor que 0 y MaximumFileSizeInBytes distinto de null (y mayor que 0).
                
            Ejemplo: 
            C:\HubblePOS\Backups\Logs\ (con o sin barra final).
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.AppenderConfigurationRollingFile.RollBackupFileExtension">
            <summary>
            Extensión del fichero de backup (especificado sin punto al principio; ej:txt). 
            No puede superar los 20 caracteres.
            Posibles valores:
                + Null: tendrá la extensión del fichero original.
                + "" (cadena vacía): sin extensión
                + xxx (otra): dicha extensión
                
            En caso de compresión de los archivos, el archivo contenedor comprimido tendrá la extensión correspondiente
            a la compresión utilizada; sin embargo el archivo contenido en dicho contenedor tendrá la extensión indicada.
            
            Ejemplo:
            backup comprimido: xxxxxxx.zip
            fichero contenido en el backup comprimido: xxxxxxxx.backup
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.AppenderConfigurationRollingFile.MustCompressBackup">
            <summary>
            Indica si los archivos de back deben comprimirse
            </summary>
        </member>
        <member name="F:HubblePOS.Logging.FilterDecisionType.Accept">
            <summary>
            Aceptar
            </summary>
        </member>
        <member name="F:HubblePOS.Logging.FilterDecisionType.Neutral">
            <summary>
            No concluyente (ni aceptar ni denegar): continuar con siguiente decisión
            </summary>
        </member>
        <member name="F:HubblePOS.Logging.FilterDecisionType.Deny">
            <summary>
            Denegar
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.LogEventEmitterInfo.ClassName">
            <summary>
            Nombre de la clase desde la que se emite el evento de log.
            Cadena vacía si esta información no está disponible
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.LogEventEmitterInfo.MethodName">
            <summary>
            Nombre del método desde la que se emite el evento de log
            Cadena vacía si esta información no está disponible
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.LogEventEmitterInfo.FileName">
            <summary>
            Fichero de código donde está el método que emite el evento de log
            Cadena vacía si esta información no está disponible
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.LogEventEmitterInfo.LineNumber">
            <summary>
            Número de línea del fichero de código desde la que se emite el evento de log
            Cadena vacía si esta información no está disponible
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.LogEventEmitterInfo.ColumnNumber">
            <summary>
            Número de columna del fichero de código desde la que se emite el evento de log
            Cadena vacía si esta información no está disponible
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.LogEventEmitterInfo.StackFrameList">
            <summary>
            Resto de marcos de la pila pertenecientes al método que emite el evento de log
            Lista vacía si no hay ninguno
            </summary>
        </member>
        <member name="T:HubblePOS.Logging.LoggerConfiguration">
            <summary>
            Representa la configuración para un logger
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.LoggerConfiguration.OwnLogLevelList">
            <summary>
            Niveles de log indicados como propios para el logger, en los que operar.
            Lista vacía si debe heredarlos de su ascendiente en la jerarquía del nombre cualificado
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.LoggerConfiguration.OwnAppenderList">
            <summary>
            Lista de appenders indicados como propios para el logger, a utilizar.
            Lista vacía si no tiene ninguno específico. Según la propiedad de aditividad 
            deberá usar los de su ascendiente en la jerarquía del nombre cualificado o no
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.LoggerConfiguration.IsAppendersAdditivityActivated">
            <summary>
            Indica si está activada la aditividad de appernders. Por defecto: true.
            En caso afirmativo, además de los apenders especificados en el presente loggers,
            se usarán los que correspondan a su ascendiente en la jerarquía de nombres
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.LoggingEvent.LoggerName">
            <summary>
            Nombre del logger que loguó este evento.
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.LoggingEvent.LogLevel">
            <summary>
            Nivel de log de este evento
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.LoggingEvent.Message">
            <summary>
            Mensaje usado para inicializar este evento. 
            Nulo en caso de no haberse usado ninguno
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.LoggingEvent.Exception">
            <summary>
            Excepción usada para inicializar este evento.
            Nulo en caso de no haberse usado ninguna
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.LoggingEvent.ParamObject">
            <summary>
            Objeto usado para inicializar este evento.
            Objeto vacío en caso de haberse usado ninguno
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.LoggingEvent.EmissionLocalDateTime">
            <summary>
            Fecha y hora locales de cuando se emite el evento de log
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.LoggingEvent.EmissionUtcDateTime">
            <summary>
            Fecha y hora utc de cuando se emite el evento de log
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.LoggingEvent.ThreadInfo">
            <summary>
            Información sobre el hilo del emisor del evento de log
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.LoggingEvent.EmitterInfo">
            <summary>
            Información sobre el emisor del evento de log
            </summary>
        </member>
        <member name="F:HubblePOS.Logging.LogLevelType.Debug">
            <summary>
            Designa mensajes informativos de grano fino que pueden ser de utilidad para depurar la aplicación 
            pero que normalmente son innecesarios o están contraindicados (por ejemplo, por impacto en el rendimiento) 
            y suelen estar desactivados en un entorno de producción.
            
            Por ejemplo: 
            se muestra el valor de algunas variables clave en el transcurso de un proceso complejo llevado a cabo por un método.
            </summary>
        </member>
        <member name="F:HubblePOS.Logging.LogLevelType.Info">
            <summary>
            Designa mensajes informativos que resaltan el progreso de la aplicación a nivel de grano grueso.
            Por su naturaleza, suelen estar desactivados a nivel global en un entorno de producción para no penalizar el rendimiento ni generar
            información superflua, pero pueden resultar de interés y estar activados para algunos puntos concretos.
            
            Por ejemplo: entrada y salida en un método, que típicamente estaría desactivado en un entorno de producción.
            Otro ejemplo: arranque y cierre de la aplicación, que podría resultar de interés que estuviera activado en un entorno de producción.
            </summary>
        </member>
        <member name="F:HubblePOS.Logging.LogLevelType.Warning">
            <summary>
            Designa situaciones potencialmente dañinas o que puedieran derivar en un funcionamiento no deseado del sistema, pero que sin embargo, 
            no supusieron un error en el momento de producirse. Pueden denotar una incorrecta configuración o algún defecto intrínseco del sistema.
            Es decir, quizá un punto pendiente de corrección de alguna manera.
            
            Por ejemplo: 
            tras realizar correctamente la recuperación de un valor de configuración, éste es nulo (no establecido); y aunque el sistema cuenta con
            un valor por defecto que le permite ser funcional, con éste puede no exhibir el mejor comportamiento, con lo que es inusual que no haya
            un valor configurado y puede ser interpretado como un olvido o punto pendiente de ser corregido.
            </summary>
        </member>
        <member name="F:HubblePOS.Logging.LogLevelType.Fail">
            <summary>
            Designa situaciones de fallo, donde alguna acción dentro del conjunto de acciones para desempeñar una funcionalidad no ha podido ser llevada a cabo,
            normalmente por algún problema de entorno que no requiere de una acción correctiva por nuestra parte. No supone un error debido a que es una situación contemplada
            y considerada dentro de los márgenes de lo normal o posible, y para la que hay acciones alternativas para llevar a cabo la funcionalidad con un resultado correcto.
            
            Por ejemplo:
            un sistama diseñado para que cuando se le pida la recuperación de un ticket lo haga preferentemente desde plataforma y en caso de fallo lo haga en la base de datos local. 
            La asusencia de red y no poder buscarlo en plataforma es un fallo, no un error, ya que la funcionalidad puede llevarse a cabo dentro de los márgener de la normalidad.
            </summary>
        </member>
        <member name="F:HubblePOS.Logging.LogLevelType.Error">
            <summary>
            Designa situaciones de error que aunque hayan impedido que la funcionalidad haya podido llevarse a cabo, no impiden que la aplicación continúe corriendo.
            
            Por ejemplo:
            no se puede obtener un cliente porque el identificador requerido por la funcionalidad no fue pasado cuando se invocó dicha funcionalidad
            </summary>
        </member>
        <member name="F:HubblePOS.Logging.LogLevelType.Fatal">
            <summary>
            Designa situaciones de error muy graves que presumiblemente conducirán a la aplicación a abortar.
            
            Por ejemplo:
            en el arranque de un servicio de windows que debe tener una determinada actividad de forma residente, no puede inicializarse correctamente con lo que
            quedará gravemente afectada su capacidad para desarrollarla. Debido a esto, el servicio no podrá terminar de arrancar y se detendrá.
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.LogManagerConfiguration.RootLoggerConfiguration">
            <summary>
            Configuración para el logger que actuará como raíz de toda la jerarquía de loggers
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.LogManagerConfiguration.OtherLoggerConfigurationDictionary">
            <summary>
            Diccionario para el resto de logger que tengan una configuración explícita.
            [Key]: nombre completo (cualificado o simple) del logger (ej:HubblePOS.Core.CustomerBC)
            [Value]: configuración para el logger
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.LogManagerConfiguration.AppenderConfigurationDictionary">
            <summary>
            Diccionario para la configuración de los appenders.
            [Key]: nombre del apppender (ej:MyRollingFile)
            [Value]: configuración para el appender
            </summary>
        </member>
        <member name="T:HubblePOS.Logging.LogManagerConfigurationAppender">
            <summary>
            Representa información para el LogManager, necesaria para la configuración de appenders
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.LogManagerConfigurationAppender.Type">
            <summary>
            Tipo de instancia que implementa el appender.
            Ej: HubblePOS.Logging.Logger
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.LogManagerConfigurationAppender.Configuration">
            <summary>
            Configuración para el appender
            </summary>
        </member>
        <member name="T:HubblePOS.Logging.LogManagerConfigurationLogger">
            <summary>
            Representa información para el LogManager, necesaria para la configuración de loggers
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.LogManagerConfigurationLogger.Type">
            <summary>
            Tipo de instancia que implementa el logger. Por defecto: HubblePOS.Logging.Logger
            Ej: HubblePOS.Logging.Logger
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.LogManagerConfigurationLogger.OwnLogLevelList">
            <summary>
            Niveles de log indicados como propios para el logger, en los que operar.
            Lista vacía si debe heredarlos de su ascendiente en la jerarquía del nombre cualificado
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.LogManagerConfigurationLogger.OwnAppenderNameList">
            <summary>
            Lista de appenders indicados como propios para el logger, a utilizar.
            Lista vacía si no tiene ninguno específico. Según la propiedad de aditividad 
            deberá usar los de su ascendiente en la jerarquía del nombre cualificado o no
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.LogManagerConfigurationLogger.IsAppendersAdditivityActivated">
            <summary>
            Indica si está activada la aditividad de appernders. Por defecto:true.
            En caso afirmativo, además de los apenders especificados en el presente loggers,
            se usarán los que correspondan a su ascendiente en la jerarquía de nombres
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.StackFrameItem.ClassName">
            <summary>
            Nombre de la clase a la que pertenece el método referido por este marco de la pila.
            Cadena vacía si esta información no está disponible
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.StackFrameItem.MethodName">
            <summary>
            Nombre del método referido por este marco de la pila.
            Cadena vacía si esta información no está disponible
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.StackFrameItem.FileName">
            <summary>
            Fichero de código donde está el método referido por este marco de la pila
            Cadena vacía si esta información no está disponible
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.StackFrameItem.LineNumber">
            <summary>
            Número de línea del fichero de código al que pertenece el suceso referido por este marco de la pila
            Cadena vacía si esta información no está disponible
            </summary>
        </member>
        <member name="P:HubblePOS.Logging.StackFrameItem.ColumnNumber">
            <summary>
            Número de columna del fichero de código al que pertenece el suceso referido por este marco de la pila
            Cadena vacía si esta información no está disponible
            </summary>
        </member>
    </members>
</doc>
